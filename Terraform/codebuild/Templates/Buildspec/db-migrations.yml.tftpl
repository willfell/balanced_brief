version: 0.2
env:
  shell: bash

phases:
  install:
    on-failure: ABORT
    commands:
      - SLACK="bash $CODEBUILD_SRC_DIR/Terraform/Slack/slack_setup.sh"
      - $SLACK install_dependencies
      - |
          if [ ! -f $CODEBUILD_SRC_DIR_slack_thread_id/ts_value.txt ]; then
            ts=$($SLACK init_build_message "Validation Testing")
            echo "ts_value.txt does not exist, ts captured from SLACK command"
          else
            ts=$(cat $CODEBUILD_SRC_DIR_slack_thread_id/ts_value.txt)
            $SLACK init_build_message "Validation Testing"
            echo "ts_value.txt exists, ts_value read from the file"
          fi
      - echo $ts
      - echo "The thread TS = $ts"
      - $SLACK progress_message "$ts" "Starting migrations"
      - cd $CODEBUILD_SRC_DIR/db
      - python migrate.py
      - $SLACK progress_message "$ts" "Migrations Complete"
    finally: 
      - |
        bash -c 'if [ "$CODEBUILD_BUILD_SUCCEEDING" == "0" ]; then $SLACK final_message_failure "$ts" ":skull_and_crossbones: - Migrations failed"; fi'
        bash -c 'if [ "$CODEBUILD_BUILD_SUCCEEDING" == "0" ]; then $SLACK final_pipeline_update_failure "$ts"; fi'
      - |
        if [ "$BRANCH_NAME" != "main" ] && [ "$CODEBUILD_BUILD_SUCCEEDING" == "1" ]; then
          bash -c '$SLACK final_message_success "$ts" "Migrations Successful"'
        fi
